{"version":3,"file":"react-three-editable.cjs.development.js","sources":["../src/store.ts","../src/components/elements/Button.tsx","../src/components/elements/Heading.tsx","../src/components/elements/Code.tsx","../src/components/elements/Modal.tsx","../src/components/elements/PortalManager.tsx","../src/components/elements/CompactModeSelect.tsx","../src/components/elements/Tooltip.tsx","../src/components/elements/IconButton.tsx","../src/components/elements/FormControl.tsx","../src/components/elements/Input.tsx","../src/components/elements/Legend.tsx","../src/components/elements/Popover.tsx","../src/components/elements/SettingsButton.tsx","../src/components/elements/Checkbox.tsx","../src/components/TransformControlsModeSelect.tsx","../src/components/ReferenceWindow.tsx","../src/components/TransformControlsSpaceSelect.tsx","../src/components/EnvironmentPreview.tsx","../src/components/ViewportShadingSettings.tsx","../src/components/ViewportShadingSelect.tsx","../src/components/SceneOutlinePanel.tsx","../src/components/PropertiesPanel.tsx","../src/components/ViewportSettings.tsx","../src/components/UI.tsx","../src/components/EditableProxy.tsx","../src/components/TransformControls.tsx","../src/components/ProxyManager.tsx","../src/components/Editor.tsx","../src/components/editable.tsx","../src/index.tsx"],"sourcesContent":["import create, { StateCreator } from 'zustand';\nimport {\n  DefaultLoadingManager,\n  Matrix4,\n  Object3D,\n  Scene,\n  WebGLRenderer,\n} from 'three';\nimport { MutableRefObject } from 'react';\nimport { OrbitControls } from '@react-three/drei';\nimport deepEqual from 'fast-deep-equal';\n\nexport type EditableType =\n  | 'group'\n  | 'mesh'\n  | 'spotLight'\n  | 'directionalLight'\n  | 'pointLight'\n  | 'perspectiveCamera'\n  | 'orthographicCamera';\nexport type TransformControlsMode = 'translate' | 'rotate' | 'scale';\nexport type TransformControlsSpace = 'world' | 'local';\nexport type ViewportShading = 'wireframe' | 'flat' | 'solid' | 'rendered';\n\nexport interface AbstractEditable<T extends EditableType> {\n  type: T;\n  role: 'active' | 'removed';\n  properties: {};\n  initialProperties: this['properties'];\n}\n\n// all these identical types are to prepare for a future in which different object types have different properties\nexport interface EditableGroup extends AbstractEditable<'group'> {\n  properties: {\n    transform: Matrix4;\n  };\n}\n\nexport interface EditableMesh extends AbstractEditable<'mesh'> {\n  properties: {\n    transform: Matrix4;\n  };\n}\n\nexport interface EditableSpotLight extends AbstractEditable<'spotLight'> {\n  properties: {\n    transform: Matrix4;\n  };\n}\n\nexport interface EditableDirectionalLight\n  extends AbstractEditable<'directionalLight'> {\n  properties: {\n    transform: Matrix4;\n  };\n}\n\nexport interface EditablePointLight extends AbstractEditable<'pointLight'> {\n  properties: {\n    transform: Matrix4;\n  };\n}\n\nexport interface EditablePerspectiveCamera\n  extends AbstractEditable<'perspectiveCamera'> {\n  properties: {\n    transform: Matrix4;\n  };\n}\n\nexport interface EditableOrthographicCamera\n  extends AbstractEditable<'orthographicCamera'> {\n  properties: {\n    transform: Matrix4;\n  };\n}\n\nexport type Editable =\n  | EditableGroup\n  | EditableMesh\n  | EditableSpotLight\n  | EditableDirectionalLight\n  | EditablePointLight\n  | EditablePerspectiveCamera\n  | EditableOrthographicCamera;\n\nexport type EditableSnapshot<T extends Editable = Editable> = {\n  proxyObject?: Object3D | null;\n} & T;\n\nexport interface AbstractSerializedEditable<T extends EditableType> {\n  type: T;\n}\n\nexport interface SerializedEditableGroup\n  extends AbstractSerializedEditable<'group'> {\n  properties: {\n    transform: number[];\n  };\n}\n\nexport interface SerializedEditableMesh\n  extends AbstractSerializedEditable<'mesh'> {\n  properties: {\n    transform: number[];\n  };\n}\n\nexport interface SerializedEditableSpotLight\n  extends AbstractSerializedEditable<'spotLight'> {\n  properties: {\n    transform: number[];\n  };\n}\n\nexport interface SerializedEditableDirectionalLight\n  extends AbstractSerializedEditable<'directionalLight'> {\n  properties: {\n    transform: number[];\n  };\n}\n\nexport interface SerializedEditablePointLight\n  extends AbstractSerializedEditable<'pointLight'> {\n  properties: {\n    transform: number[];\n  };\n}\n\nexport interface SerializedEditablePerspectiveCamera\n  extends AbstractSerializedEditable<'perspectiveCamera'> {\n  properties: {\n    transform: number[];\n  };\n}\n\nexport interface SerializedEditableOrthographicCamera\n  extends AbstractSerializedEditable<'orthographicCamera'> {\n  properties: {\n    transform: number[];\n  };\n}\n\nexport type SerializedEditable =\n  | SerializedEditableGroup\n  | SerializedEditableMesh\n  | SerializedEditableSpotLight\n  | SerializedEditableDirectionalLight\n  | SerializedEditablePointLight\n  | SerializedEditablePerspectiveCamera\n  | SerializedEditableOrthographicCamera;\n\nexport interface EditableState {\n  editables: Record<string, SerializedEditable>;\n}\n\nexport type EditorStore = {\n  scene: Scene | null;\n  gl: WebGLRenderer | null;\n  allowImplicitInstancing: boolean;\n  orbitControlsRef: MutableRefObject<OrbitControls | undefined> | null;\n  editables: Record<string, Editable>;\n  // this will come in handy when we start supporting multiple canvases\n  canvasName: string;\n  initialState: EditableState | null;\n  selected: string | null;\n  transformControlsMode: TransformControlsMode;\n  transformControlsSpace: TransformControlsSpace;\n  viewportShading: ViewportShading;\n  editorOpen: boolean;\n  sceneSnapshot: Scene | null;\n  editablesSnapshot: Record<string, EditableSnapshot> | null;\n  hdrPaths: string[];\n  selectedHdr: string | null;\n  showOverlayIcons: boolean;\n  useHdrAsBackground: boolean;\n  showGrid: boolean;\n  showAxes: boolean;\n\n  init: (\n    scene: Scene,\n    gl: WebGLRenderer,\n    allowImplicitInstancing: boolean,\n    initialState?: EditableState\n  ) => void;\n  setOrbitControlsRef: (\n    orbitControlsRef: MutableRefObject<OrbitControls | undefined>\n  ) => void;\n  addEditable: <T extends EditableType>(\n    type: T,\n    uniqueName: string,\n    initialProperties: Extract<Editable, { type: T }>['properties']\n  ) => void;\n  removeEditable: (uniqueName: string) => void;\n  setEditableTransform: (uniqueName: string, transform: Matrix4) => void;\n  setSelected: (name: string | null) => void;\n  setSelectedHdr: (hdr: string | null) => void;\n  setTransformControlsMode: (mode: TransformControlsMode) => void;\n  setTransformControlsSpace: (mode: TransformControlsSpace) => void;\n  setViewportShading: (mode: ViewportShading) => void;\n  setShowOverlayIcons: (show: boolean) => void;\n  setUseHdrAsBackground: (use: boolean) => void;\n  setShowGrid: (show: boolean) => void;\n  setShowAxes: (show: boolean) => void;\n  setEditorOpen: (open: boolean) => void;\n  createSnapshot: () => void;\n  setSnapshotProxyObject: (\n    proxyObject: Object3D | null,\n    uniqueName: string\n  ) => void;\n  serialize: () => EditableState;\n  isPersistedStateDifferentThanInitial: () => boolean;\n  applyPersistedState: () => void;\n};\n\ninterface PersistedState {\n  canvases: {\n    [name: string]: EditableState;\n  };\n}\n\nconst config: StateCreator<EditorStore> = (set, get) => {\n  setTimeout(() => {\n    const existingHandler = DefaultLoadingManager.onProgress;\n    DefaultLoadingManager.onProgress = (url, loaded, total) => {\n      existingHandler(url, loaded, total);\n      if (url.match(/\\.hdr$/)) {\n        set((state) => {\n          const newPaths = new Set(state.hdrPaths);\n          newPaths.add(url);\n          return { hdrPaths: Array.from(newPaths) };\n        });\n      }\n    };\n  });\n\n  return {\n    scene: null,\n    gl: null,\n    allowImplicitInstancing: false,\n    orbitControlsRef: null,\n    editables: {},\n    canvasName: 'default',\n    initialState: null,\n    selected: null,\n    transformControlsMode: 'translate',\n    transformControlsSpace: 'world',\n    viewportShading: 'rendered',\n    editorOpen: false,\n    sceneSnapshot: null,\n    editablesSnapshot: null,\n    hdrPaths: [],\n    selectedHdr: null,\n    showOverlayIcons: false,\n    useHdrAsBackground: true,\n    showGrid: true,\n    showAxes: true,\n\n    init: (scene, gl, allowImplicitInstancing, initialState) => {\n      const editables = get().editables;\n\n      const newEditables: Record<string, Editable> = initialState\n        ? Object.fromEntries(\n            Object.entries(initialState.editables).map(([name, editable]) => {\n              const originalEditable = editables[name];\n              return [\n                name,\n                {\n                  type: editable.type,\n                  role: originalEditable?.role ?? 'removed',\n                  properties: {\n                    transform: new Matrix4().fromArray(\n                      editable.properties.transform\n                    ),\n                  },\n                  initialProperties: originalEditable?.initialProperties ?? {\n                    transform: new Matrix4(),\n                  },\n                },\n              ];\n            })\n          )\n        : editables;\n\n      set({\n        scene,\n        gl,\n        allowImplicitInstancing,\n        editables: newEditables,\n        initialState,\n      });\n    },\n    addEditable: (type, uniqueName, initialProperties) =>\n      set((state) => {\n        let properties = initialProperties;\n        if (state.editables[uniqueName]) {\n          if (\n            state.editables[uniqueName].type !== type &&\n            process.env.NODE_ENV === 'development'\n          ) {\n            console.error(`Warning: There is a mismatch between the serialized type of ${uniqueName} and the one set when adding it to the scene.\n  Serialized: ${state.editables[uniqueName].type}.\n  Current: ${type}.\n  \n  This might have happened either because you changed the type of an object, in which case a re-export will solve the issue, or because you re-used the uniqueName for an object of a different type, which is an error.`);\n          }\n          if (\n            state.editables[uniqueName].role === 'active' &&\n            !state.allowImplicitInstancing\n          ) {\n            throw Error(\n              `Scene already has an editable object named ${uniqueName}.\n  If this is intentional, please set the allowImplicitInstancing prop of EditableManager to true.`\n            );\n          } else {\n            properties = state.editables[uniqueName].properties;\n          }\n        }\n\n        return {\n          editables: {\n            ...state.editables,\n            [uniqueName]: {\n              type: type as EditableType,\n              role: 'active',\n              properties,\n              initialProperties,\n            },\n          },\n        };\n      }),\n    setOrbitControlsRef: (camera) => {\n      set({ orbitControlsRef: camera });\n    },\n    removeEditable: (name) =>\n      set((state) => {\n        const { [name]: removed, ...rest } = state.editables;\n        return {\n          editables: {\n            ...rest,\n            [name]: { ...removed, role: 'removed' },\n          },\n        };\n      }),\n    setEditableTransform: (uniqueName, transform) => {\n      set((state) => ({\n        editables: {\n          ...state.editables,\n          [uniqueName]: {\n            ...state.editables[uniqueName],\n            properties: { transform },\n          },\n        },\n      }));\n    },\n    setSelected: (name) => {\n      set({ selected: name });\n    },\n    setSelectedHdr: (hdr) => {\n      set({ selectedHdr: hdr });\n    },\n    setTransformControlsMode: (mode) => {\n      set({ transformControlsMode: mode });\n    },\n    setTransformControlsSpace: (mode) => {\n      set({ transformControlsSpace: mode });\n    },\n    setViewportShading: (mode) => {\n      set({ viewportShading: mode });\n    },\n    setShowOverlayIcons: (show) => {\n      set({ showOverlayIcons: show });\n    },\n    setUseHdrAsBackground: (use) => {\n      set({ useHdrAsBackground: use });\n    },\n    setShowGrid: (show) => {\n      set({ showGrid: show });\n    },\n    setShowAxes: (show) => {\n      set({ showAxes: show });\n    },\n    setEditorOpen: (open) => {\n      set({ editorOpen: open });\n    },\n    createSnapshot: () => {\n      set((state) => ({\n        sceneSnapshot: state.scene?.clone(),\n        editablesSnapshot: state.editables,\n      }));\n    },\n    setSnapshotProxyObject: (proxyObject, uniqueName) => {\n      set((state) => ({\n        editablesSnapshot: {\n          ...state.editablesSnapshot,\n          [uniqueName]: {\n            ...state.editablesSnapshot![uniqueName],\n            proxyObject,\n          },\n        },\n      }));\n    },\n    serialize: () => ({\n      editables: Object.fromEntries(\n        Object.entries(get().editables).map(([name, editable]) => [\n          name,\n          {\n            type: editable.type,\n            properties: {\n              transform: editable.properties.transform.toArray(),\n            },\n          },\n        ])\n      ),\n    }),\n    isPersistedStateDifferentThanInitial: () => {\n      const initialState = get().initialState;\n      const canvasName = get().canvasName!;\n\n      if (!initialState || !initialPersistedState) {\n        return false;\n      }\n\n      return !deepEqual(\n        initialPersistedState.canvases[canvasName],\n        initialState\n      );\n    },\n    applyPersistedState: () => {\n      const editables = get().editables;\n      const canvasName = get().canvasName!;\n\n      if (!initialPersistedState) {\n        return;\n      }\n\n      const newEditables: Record<string, Editable> = Object.fromEntries(\n        Object.entries(\n          initialPersistedState.canvases[canvasName].editables\n        ).map(([name, editable]) => {\n          const originalEditable = editables[name];\n          return [\n            name,\n            {\n              type: editable.type,\n              role: originalEditable?.role ?? 'removed',\n              properties: {\n                transform: new Matrix4().fromArray(\n                  editable.properties.transform\n                ),\n              },\n              initialProperties: originalEditable?.initialProperties ?? {\n                transform: new Matrix4(),\n              },\n            },\n          ];\n        })\n      );\n\n      set({\n        editables: newEditables,\n      });\n    },\n  };\n};\n\nexport const useEditorStore = create<EditorStore>(config);\n\nconst initPersistence = (\n  key: string\n): [PersistedState | null, (() => void) | undefined] => {\n  let initialPersistedState: PersistedState | null = null;\n  let unsub;\n\n  if (process.env.NODE_ENV === 'development') {\n    try {\n      const rawPersistedState = localStorage.getItem(key);\n      if (rawPersistedState) {\n        initialPersistedState = JSON.parse(rawPersistedState);\n      }\n    } catch (e) {}\n\n    unsub = useEditorStore.subscribe(\n      () => {\n        const canvasName = useEditorStore.getState().canvasName;\n        const serialize = useEditorStore.getState().serialize;\n        if (canvasName) {\n          const editables = serialize();\n          localStorage.setItem(\n            key,\n            JSON.stringify({\n              canvases: {\n                [canvasName]: editables,\n              },\n            })\n          );\n        }\n      },\n      (state) => state.editables\n    );\n  }\n\n  return [initialPersistedState, unsub];\n};\n\nlet [initialPersistedState, unsub] = initPersistence('react-three-editable_');\n\nexport type BindFunction = (options?: {\n  allowImplicitInstancing?: boolean;\n  state?: EditableState;\n}) => (options: { gl: WebGLRenderer; scene: Scene }) => void;\n\nexport const configure = ({\n  localStorageNamespace = '',\n  enablePersistence = true,\n} = {}): BindFunction => {\n  if (unsub) {\n    unsub();\n  }\n\n  if (enablePersistence) {\n    const persistence = initPersistence(\n      `react-three-editable_${localStorageNamespace}`\n    );\n\n    initialPersistedState = persistence[0];\n    unsub = persistence[1];\n  } else {\n    initialPersistedState = null;\n    unsub = undefined;\n  }\n\n  return ({ allowImplicitInstancing = false, state } = {}) => {\n    return ({ gl, scene }) => {\n      const init = useEditorStore.getState().init;\n      init(scene, gl, allowImplicitInstancing, state);\n    };\n  };\n};\n","import React, { forwardRef } from 'react';\nimport { Button as ButtonImpl, ButtonProps } from 'reakit';\n\nexport { ButtonProps };\n\nconst Button = forwardRef<HTMLButtonElement, ButtonProps>((props, ref) => {\n  return (\n    <ButtonImpl\n      // @ts-ignore\n      ref={ref}\n      {...props}\n      className={`${props.className} inline-flex justify-center rounded-md px-4 py-2 font-medium bg-gray-100 text-gray-700 hover:bg-gray-200 focus:outline-none focus:ring focus:ring-blue-300`}\n    />\n  );\n});\n\nexport default Button;\n","import React, { ComponentProps, forwardRef } from 'react';\n\nexport type HeadingProps = ComponentProps<'h1'>;\n\nconst Heading = forwardRef<HTMLHeadingElement, HeadingProps>((props, ref) => {\n  return (\n    // eslint-disable-next-line jsx-a11y/heading-has-content\n    <h1 ref={ref} {...props} className={`${props.className} font-bold`} />\n  );\n});\n\nexport default Heading;\n","import React, { VFC } from 'react';\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\n\nexport interface CodeProps {\n  children: string;\n  block?: boolean;\n}\n\nconst Code: VFC<CodeProps> = ({ children, block }) => {\n  return (\n    <Highlight {...defaultProps} theme={theme} code={children} language=\"tsx\">\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <code\n          className={`${className} font-mono whitespace-pre rounded ${\n            block ? 'block p-4' : 'inline p-1'\n          }`}\n          style={style}\n        >\n          {tokens.map((line, i) => (\n            <div\n              {...getLineProps({ line, key: i })}\n              className={block ? 'block' : 'inline'}\n            >\n              {line.map((token, key) => (\n                <span {...getTokenProps({ token, key })} />\n              ))}\n            </div>\n          ))}\n        </code>\n      )}\n    </Highlight>\n  );\n};\nexport default Code;\n","import React, { ComponentProps, forwardRef, VFC } from 'react';\nimport { Dialog, DialogBackdrop, DialogProps, useDialogState } from 'reakit';\n\n// we are abstracting away stuff like baseId because we are not going to use DialogDisclosure\nexport type ModalProps = Pick<DialogProps, 'children' | 'visible' | 'hide'>;\n\nexport const Modal: VFC<ModalProps> = ({ children, ...props }) => {\n  const dialog = { ...useDialogState(), ...props };\n\n  return (\n    <DialogBackdrop\n      // @ts-ignore\n      {...dialog}\n      className=\"fixed inset-0 bg-black bg-opacity-40 z-50 flex justify-center items-start\"\n    >\n      <Dialog\n        // @ts-ignore\n        {...dialog}\n        className=\"flex flex-col my-14 max-w-md w-full bg-white rounded-md shadow-lg focus:outline-none\"\n        aria-label=\"Dialog\"\n      >\n        {children}\n      </Dialog>\n    </DialogBackdrop>\n  );\n};\n\nexport const useModal = () => {\n  const { show, hide, visible } = useDialogState();\n\n  return { show, hide, visible };\n};\n\nexport type ModalHeaderProps = ComponentProps<'header'>;\n\nexport const ModalHeader = forwardRef<HTMLElement, ModalHeaderProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <header\n        ref={ref}\n        {...props}\n        className={`${className} flex-0 px-6 py-4 text-xl font-semibold`}\n      />\n    );\n  }\n);\n\nexport type ModalBodyProps = ComponentProps<'div'>;\n\nexport const ModalBody = forwardRef<HTMLDivElement, ModalBodyProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <div ref={ref} {...props} className={`${className} flex-1 px-6 py-2`} />\n    );\n  }\n);\n\nexport type ModalFooterProps = ComponentProps<'footer'>;\n\nexport const ModalFooter = forwardRef<HTMLElement, ModalFooterProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <footer\n        ref={ref}\n        {...props}\n        className={`${className} flex px-6 py-4 justify-end gap-3`}\n      />\n    );\n  }\n);\n","import React, { ReactNode, useLayoutEffect, useState } from 'react';\nimport { PortalContext } from 'reakit';\n\nexport interface PortalManagerProps {\n  children: ReactNode;\n}\n\nconst PortalManager: React.VFC<PortalManagerProps> = ({ children }) => {\n  const wrapperRef = React.useRef<HTMLDivElement>(null);\n\n  // force update on initial render\n  const [, forceUpdate] = useState(false);\n  useLayoutEffect(() => {\n    forceUpdate((i) => !i);\n  }, []);\n\n  return (\n    <PortalContext.Provider value={wrapperRef.current}>\n      {children}\n      <div ref={wrapperRef} className=\"relative z-50\" />\n    </PortalContext.Provider>\n  );\n};\n\nexport default PortalManager;\n","import React, { ReactElement, ReactNode, VFC } from 'react';\nimport { Group, Button } from 'reakit';\nimport { FiChevronDown } from '@react-icons/all-files/fi/FiChevronDown';\nimport { IconType } from '@react-icons/all-files';\nimport {\n  Tooltip,\n  TooltipReference,\n  usePopoverState,\n  useTooltipState,\n  PopoverDisclosure,\n  Popover,\n} from '.';\n\ninterface OptionButtonProps<Option> {\n  value: Option;\n  option: Option;\n  label: string;\n  icon: ReactElement<IconType>;\n  onClick: () => void;\n}\n\nconst OptionButton = <Option,>({\n  value,\n  option,\n  label,\n  icon,\n  onClick,\n}: OptionButtonProps<Option>) => {\n  const tooltip = useTooltipState();\n  return (\n    <>\n      <TooltipReference\n        {...tooltip}\n        as={Button}\n        className={`flex relative items-center justify-center align-middle w-auto text-sm font-semibold h-7 px-2 first:rounded-l last:rounded-r focus:outline-none focus:ring focus:ring-blue-300 focus:ring-inset ${\n          option === value\n            ? 'bg-green-800 hover:bg-green-900 text-white'\n            : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n        }`}\n        aria-label={label}\n        onClick={onClick}\n      >\n        {icon}\n      </TooltipReference>\n      <Tooltip {...tooltip}>{label}</Tooltip>\n    </>\n  );\n};\n\ninterface SettingsProps {\n  children: ReactNode;\n}\n\nconst Settings: VFC<SettingsProps> = ({ children }) => {\n  const tooltip = useTooltipState();\n  const popover = usePopoverState();\n\n  return (\n    <>\n      <TooltipReference\n        {...tooltip}\n        as={'div'}\n        tabIndex={-1}\n        className=\"focus:outline-none\"\n      >\n        <PopoverDisclosure\n          // @ts-ignore\n          {...popover}\n          className={`flex relative items-center justify-center align-middle w-auto text-sm font-semibold h-7 px-1 rounded-r bg-gray-800 text-white hover:bg-gray-900 focus:outline-none focus:ring focus:ring-blue-300 focus:ring-inset`}\n        >\n          <FiChevronDown />\n        </PopoverDisclosure>\n      </TooltipReference>\n      <Tooltip {...tooltip}>Settings</Tooltip>\n      <Popover\n        {...popover}\n        // this seems to be necessary to prevent the popup from forever being closed after the first opening\n        hideOnClickOutside={false}\n        aria-label=\"More options\"\n      >\n        {children}\n      </Popover>\n    </>\n  );\n};\n\nexport interface CompactModeSelectProps<Option> {\n  value: Option;\n  onChange: (value: Option) => void;\n  options: {\n    option: Option;\n    label: string;\n    icon: ReactElement<IconType>;\n  }[];\n  settingsPanel?: ReactNode;\n}\n\nconst CompactModeSelect = <Option extends string | number>({\n  value,\n  onChange,\n  options,\n  settingsPanel,\n}: CompactModeSelectProps<Option>) => {\n  return (\n    <Group\n      // @ts-ignore\n      className=\"flex\"\n    >\n      {options.map(({ label, icon, option }) => (\n        <OptionButton\n          key={option}\n          value={value}\n          option={option}\n          label={label}\n          icon={icon}\n          onClick={() => onChange(option)}\n        />\n      ))}\n      {settingsPanel && <Settings>{settingsPanel}</Settings>}\n    </Group>\n  );\n};\n\nexport default CompactModeSelect;\n","import React, { VFC } from 'react';\nimport {\n  Tooltip as TooltipImpl,\n  TooltipProps,\n  TooltipReference,\n  TooltipReferenceProps,\n  useTooltipState,\n} from 'reakit';\n\nexport {\n  TooltipProps,\n  TooltipReference,\n  TooltipReferenceProps,\n  useTooltipState,\n};\n\nexport const Tooltip: VFC<TooltipProps> = ({ className, ...props }) => (\n  <TooltipImpl\n    // @ts-ignore\n    {...props}\n    className={`${className} px-2 py-1  text-white bg-gray-700 rounded-sm text-sm pointer-events-none shadow-md`}\n  />\n);\n","import React, { forwardRef, ReactElement } from 'react';\nimport { Button, ButtonProps } from 'reakit';\nimport { IconType } from '@react-icons/all-files';\nimport { Tooltip, TooltipReference, useTooltipState } from './index';\n\nexport interface IconButtonProps extends Exclude<ButtonProps, 'children'> {\n  icon: ReactElement<IconType>;\n  label: string;\n}\n\nconst IconButton = forwardRef<HTMLButtonElement, IconButtonProps>(\n  ({ label, icon, className, ...props }, ref) => {\n    const tooltip = useTooltipState();\n    return (\n      <>\n        <TooltipReference\n          ref={ref}\n          {...props}\n          {...tooltip}\n          as={Button}\n          className={`${className} flex relative items-center justify-center align-middle w-auto text-sm font-semibold h-7 px-2 first:rounded-l last:rounded-r bg-gray-100 text-gray-700 hover:bg-gray-200 focus:outline-none focus:ring focus:ring-blue-300 focus:ring-inset`}\n          aria-label={label}\n        >\n          {icon}\n        </TooltipReference>\n        <Tooltip {...tooltip}>{label}</Tooltip>\n      </>\n    );\n  }\n);\n\nexport default IconButton;\n","import React, { createContext, ReactNode, useContext, VFC } from 'react';\nimport { useId } from '.';\n\nconst FormControlContext = createContext<string | undefined>(undefined);\n\ninterface FormControlProps {\n  id?: string;\n  children: ReactNode;\n}\n\nexport const FormControl: VFC<FormControlProps> = ({ children, ...props }) => {\n  const { id } = useId(props);\n\n  return (\n    <FormControlContext.Provider value={id}>\n      {children}\n    </FormControlContext.Provider>\n  );\n};\n\nexport const useFormControlContext = () => useContext(FormControlContext);\n","import React, { forwardRef } from 'react';\nimport { Input as InputImpl, InputProps } from 'reakit';\nimport { useFormControlContext } from './FormControl';\n\nexport { InputProps };\n\nconst Input = forwardRef<HTMLInputElement, InputProps>((props, ref) => {\n  const id = useFormControlContext();\n\n  return (\n    <InputImpl\n      // @ts-ignore\n      ref={ref}\n      {...props}\n      id={props.id ?? id}\n      className={`${props.className} w-full h-8 px-3 border rounded-sm focus:outline-none focus:ring focus:ring-blue-300`}\n    />\n  );\n});\n\nexport default Input;\n","import React, { ComponentProps, forwardRef } from 'react';\n\nexport type LegendProps = ComponentProps<'legend'>;\n\nconst Input = forwardRef<HTMLLegendElement, LegendProps>((props, ref) => {\n  return (\n    <legend\n      ref={ref}\n      {...props}\n      className={`${props.className} font-medium mb-2`}\n    />\n  );\n});\n\nexport default Input;\n","import React, { VFC } from 'react';\n\nimport {\n  usePopoverState,\n  Popover as PopoverImpl,\n  PopoverProps,\n  PopoverDisclosure,\n} from 'reakit';\n\nexport { PopoverProps, PopoverDisclosure, usePopoverState };\n\nexport const Popover: VFC<PopoverProps> = ({\n  className,\n  children,\n  ...props\n}) => {\n  return (\n    <>\n      <PopoverImpl\n        // @ts-ignore\n        {...props}\n        className=\"flex p-4 w-80 rounded overflow-hidden shadow-2xl focus:outline-none bg-white\"\n      >\n        {/* it seems that rendering Canvas in a display: none element permanently breaks its sizing, so we don't */}\n        {props.visible && children}\n      </PopoverImpl>\n    </>\n  );\n};\n","import React, { ReactElement, ReactNode, VFC } from 'react';\nimport { FiChevronDown } from '@react-icons/all-files/fi/FiChevronDown';\nimport { IconType } from '@react-icons/all-files';\nimport {\n  Popover,\n  PopoverDisclosure,\n  Tooltip,\n  TooltipReference,\n  usePopoverState,\n  useTooltipState,\n} from './index';\n\nexport interface SettingsButtonProps {\n  icon: ReactElement<IconType>;\n  label: string;\n  children: ReactNode;\n}\n\nconst SettingsButton: VFC<SettingsButtonProps> = ({\n  children,\n  icon,\n  label,\n}) => {\n  const tooltip = useTooltipState();\n  const popover = usePopoverState();\n\n  return (\n    <>\n      <TooltipReference\n        {...tooltip}\n        as={'div'}\n        tabIndex={-1}\n        className=\"inline-block focus:outline-none\"\n      >\n        <PopoverDisclosure\n          // @ts-ignore\n          {...popover}\n          className={`flex gap-1 relative items-center justify-center align-middle w-auto text-sm font-semibold h-7 px-2 rounded bg-gray-100 text-gray-700 hover:bg-gray-200 focus:outline-none focus:ring focus:ring-blue-300 focus:ring-inset`}\n        >\n          {icon}\n          <FiChevronDown />\n        </PopoverDisclosure>\n      </TooltipReference>\n      <Tooltip {...tooltip}>{label}</Tooltip>\n      <Popover\n        {...popover}\n        // this seems to be necessary to prevent the popup from forever being closed after the first opening\n        hideOnClickOutside={false}\n        aria-label={label}\n      >\n        {children}\n      </Popover>\n    </>\n  );\n};\n\nexport default SettingsButton;\n","import React, { forwardRef } from 'react';\nimport { Checkbox as CheckboxImpl, CheckboxProps } from 'reakit';\nimport { useFormControlContext } from './FormControl';\n\nexport { CheckboxProps };\n\nconst Checkbox = forwardRef<HTMLInputElement, CheckboxProps>(\n  ({ children, ...props }, ref) => {\n    const id = useFormControlContext();\n\n    return (\n      <div className=\"flex items-start\">\n        <div className=\"flex items-center h-5\">\n          <CheckboxImpl\n            // @ts-ignore\n            {...props}\n            id={props.id ?? id}\n            ref={ref}\n            className=\"focus:ring focus:ring-opacity-50 focus:ring-blue-500 focus:ring-offset-0 h-4 w-4 text-green-800 border-gray-300 hover:border-gray-400 rounded\"\n          />\n        </div>\n        <div className=\"ml-3 text-sm\">\n          <label htmlFor={props.id ?? id} className=\"font-medium text-gray-700\">\n            {children}\n          </label>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default Checkbox;\n","import React, { VFC } from 'react';\nimport { GiResize } from '@react-icons/all-files/gi/GiResize';\nimport { GiMove } from '@react-icons/all-files/gi/GiMove';\nimport { GiClockwiseRotation } from '@react-icons/all-files/gi/GiClockwiseRotation';\nimport { TransformControlsMode } from '../store';\nimport { CompactModeSelect } from './elements';\n\nexport interface TransformControlsModeSelectProps {\n  value: TransformControlsMode;\n  onChange: (value: TransformControlsMode) => void;\n}\n\nconst TransformControlsModeSelect: VFC<TransformControlsModeSelectProps> = ({\n  value,\n  onChange,\n}) => (\n  <CompactModeSelect\n    value={value}\n    onChange={onChange}\n    options={[\n      {\n        option: 'translate',\n        label: 'Tool: Translate',\n        icon: <GiMove />,\n      },\n      {\n        option: 'rotate',\n        label: 'Tool: Rotate',\n        icon: <GiClockwiseRotation />,\n      },\n      {\n        option: 'scale',\n        label: 'Tool: Scale',\n        icon: <GiResize />,\n      },\n    ]}\n  />\n);\n\nexport default TransformControlsModeSelect;\n","import React, { useEffect, useLayoutEffect, useRef, VFC } from 'react';\nimport { useEditorStore } from '../store';\nimport shallow from 'zustand/shallow';\nimport { WebGLRenderer } from 'three';\nimport useMeasure from 'react-use-measure';\n\ninterface ReferenceWindowProps {\n  height: number;\n}\n\nconst ReferenceWindow: VFC<ReferenceWindowProps> = ({ height }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const [gl] = useEditorStore((state) => [state.gl], shallow);\n  const [ref, bounds] = useMeasure();\n\n  useLayoutEffect(() => {\n    if (gl) {\n      ref(gl?.domElement);\n    }\n  }, [gl, ref]);\n\n  useEffect(() => {\n    let animationHandle: number;\n    const draw = (gl: WebGLRenderer) => () => {\n      animationHandle = requestAnimationFrame(draw(gl));\n\n      if (!gl.domElement) {\n        return;\n      }\n\n      const width = (gl.domElement.width / gl.domElement.height) * height;\n\n      const ctx = canvasRef.current!.getContext('2d')!;\n\n      // https://stackoverflow.com/questions/17861447/html5-canvas-drawimage-how-to-apply-antialiasing\n      ctx.imageSmoothingQuality = 'high';\n\n      ctx.fillStyle = 'white';\n      ctx.fillRect(0, 0, width, height);\n      ctx.drawImage(gl.domElement, 0, 0, width, height);\n    };\n\n    if (gl) {\n      draw(gl)();\n    }\n\n    return () => {\n      cancelAnimationFrame(animationHandle);\n    };\n  }, [gl, height]);\n\n  return gl?.domElement ? (\n    <div className=\"rounded overflow-hidden shadow-2xl\">\n      <canvas\n        ref={canvasRef}\n        width={\n          ((bounds.width || gl.domElement.width) /\n            (bounds.height || gl.domElement.height)) *\n          height\n        }\n        height={height}\n      />\n    </div>\n  ) : null;\n};\n\nexport default ReferenceWindow;\n","import React, { VFC } from 'react';\nimport { TransformControlsSpace } from '../store';\nimport { CompactModeSelect } from './elements';\nimport { BiGlobe } from '@react-icons/all-files/bi/BiGlobe';\nimport { BiCube } from '@react-icons/all-files/bi/BiCube';\n\nexport interface TransformControlsSpaceSelectProps {\n  value: TransformControlsSpace;\n  onChange: (value: TransformControlsSpace) => void;\n}\n\nconst TransformControlsSpaceSelect: VFC<TransformControlsSpaceSelectProps> = ({\n  value,\n  onChange,\n}) => (\n  <CompactModeSelect\n    value={value}\n    onChange={onChange}\n    options={[\n      {\n        option: 'world',\n        label: 'Space: World',\n        icon: <BiGlobe />,\n      },\n      {\n        option: 'local',\n        label: 'Space: Local',\n        icon: <BiCube />,\n      },\n    ]}\n  />\n);\n\nexport default TransformControlsSpaceSelect;\n","import React, { VFC, Suspense } from 'react';\nimport { Canvas } from 'react-three-fiber';\nimport { Environment, OrbitControls, TorusKnot } from '@react-three/drei';\nimport { Clickable, ClickableProps } from 'reakit';\nimport { IoIosClose } from '@react-icons/all-files/io/IoIosClose';\n\nexport interface EnvironmentPreviewProps extends ClickableProps {\n  url: string | null;\n  selected: boolean;\n}\n\nconst EnvironmentPreview: VFC<EnvironmentPreviewProps> = ({\n  url,\n  selected,\n  ...props\n}) => {\n  return (\n    <Clickable\n      {...props}\n      as=\"div\"\n      className={`${\n        selected\n          ? 'ring-4 ring-green-800 hover:ring-green-900'\n          : 'hover:ring-4 hover:ring-gray-200'\n      } focus:outline-none focus:ring-4 rounded overflow-hidden`}\n    >\n      <div className=\"h-full relative\">\n        {url ? (\n          <>\n            <Canvas>\n              <Suspense fallback={null}>\n                <OrbitControls\n                  enableZoom={false}\n                  enablePan={false}\n                  {...({} as any)}\n                />\n                <Environment\n                  // @ts-ignore\n                  files={url}\n                  path=\"\"\n                  background={true}\n                />\n              </Suspense>\n              <TorusKnot {...({} as any)}>\n                <meshStandardMaterial metalness={1} roughness={0} />\n              </TorusKnot>\n            </Canvas>\n            <div className=\"absolute inset-1 pointer-events-none flex flex-col justify-end items-center\">\n              <div className=\"bg-white p-0.5 text-xxs rounded shadow\">\n                {url ?? 'None'}\n              </div>\n            </div>\n          </>\n        ) : (\n          <div className=\"flex justify-center items-center h-full bg-gray-100\">\n            <IoIosClose size=\"3em\" />\n          </div>\n        )}\n      </div>\n    </Clickable>\n  );\n};\n\nexport default EnvironmentPreview;\n","import React, { VFC } from 'react';\nimport { useEditorStore } from '../store';\nimport shallow from 'zustand/shallow';\nimport EnvironmentPreview from './EnvironmentPreview';\nimport { Checkbox, FormControl, Heading } from './elements';\n\nconst ViewportShadingSettings: VFC = () => {\n  const [\n    hdrPaths,\n    selectedHdr,\n    useHdrAsBackground,\n    setSelectedHdr,\n    setUseHdrAsBackground,\n  ] = useEditorStore(\n    (state) => [\n      state.hdrPaths,\n      state.selectedHdr,\n      state.useHdrAsBackground,\n      state.setSelectedHdr,\n      state.setUseHdrAsBackground,\n    ],\n    shallow\n  );\n\n  return (\n    <div className=\"w-full\">\n      <Heading className=\"text-xl mb-3\">Environment</Heading>\n      <div className=\"flex flex-col gap-3\">\n        <div className=\"grid grid-cols-2 gap-4 auto-rows-16\">\n          <EnvironmentPreview\n            url={null}\n            selected={selectedHdr === null}\n            onClick={() => {\n              setSelectedHdr(null);\n            }}\n          />\n          {hdrPaths.map((hdrPath) => (\n            <EnvironmentPreview\n              key={hdrPath}\n              url={hdrPath}\n              selected={hdrPath === selectedHdr}\n              onClick={() => {\n                setSelectedHdr(hdrPath);\n              }}\n            />\n          ))}\n        </div>\n        <FormControl>\n          <Checkbox\n            checked={useHdrAsBackground}\n            onChange={() => setUseHdrAsBackground(!useHdrAsBackground)}\n          >\n            Use as background\n          </Checkbox>\n        </FormControl>\n      </div>\n    </div>\n  );\n};\n\nexport default ViewportShadingSettings;\n","import React, { VFC } from 'react';\nimport { GiIceCube } from '@react-icons/all-files/gi/GiIceCube';\nimport { BiCube } from '@react-icons/all-files/bi/BiCube';\nimport { FaCube } from '@react-icons/all-files/fa/FaCube';\nimport { GiCube } from '@react-icons/all-files/gi/GiCube';\nimport { ViewportShading } from '../store';\nimport { CompactModeSelect } from './elements';\nimport ViewportShadingSettings from './ViewportShadingSettings';\n\nexport interface ViewportShadingSelectProps {\n  value: ViewportShading;\n  onChange: (value: ViewportShading) => void;\n}\n\nconst ViewportShadingSelect: VFC<ViewportShadingSelectProps> = ({\n  value,\n  onChange,\n}) => (\n  <CompactModeSelect\n    value={value}\n    onChange={onChange}\n    options={[\n      {\n        option: 'wireframe',\n        label: 'Display: Wireframe',\n        icon: <BiCube />,\n      },\n      {\n        option: 'flat',\n        label: 'Display: Flat',\n        icon: <GiCube />,\n      },\n      {\n        option: 'solid',\n        label: 'Display: Solid',\n        icon: <FaCube />,\n      },\n      {\n        option: 'rendered',\n        label: 'Display: Rendered',\n        icon: <GiIceCube />,\n      },\n    ]}\n    settingsPanel={<ViewportShadingSettings />}\n  />\n);\n\nexport default ViewportShadingSelect;\n","import React, { ReactElement, VFC } from 'react';\nimport { EditableType, useEditorStore } from '../store';\nimport shallow from 'zustand/shallow';\nimport { Button as ButtonImpl, ButtonProps, Group } from 'reakit';\nimport { IconType } from '@react-icons/all-files';\nimport { BsFillCollectionFill } from '@react-icons/all-files/bs/BsFillCollectionFill';\nimport { GiLightProjector } from '@react-icons/all-files/gi/GiLightProjector';\nimport { BiSun } from '@react-icons/all-files/bi/BiSun';\nimport { GiCube } from '@react-icons/all-files/gi/GiCube';\nimport { GiLightBulb } from '@react-icons/all-files/gi/GiLightBulb';\nimport { BsCameraVideoFill } from '@react-icons/all-files/bs/BsCameraVideoFill';\nimport { Heading, Button } from './elements';\n\ninterface ObjectButtonProps extends ButtonProps {\n  objectName: string;\n  editableType: EditableType;\n  selected: string | null;\n}\n\nconst ObjectButton: VFC<ObjectButtonProps> = ({\n  objectName,\n  editableType,\n  selected,\n  ...props\n}) => {\n  let icon: ReactElement<IconType>;\n  switch (editableType) {\n    case 'group':\n      icon = <BsFillCollectionFill />;\n      break;\n    case 'mesh':\n      icon = <GiCube />;\n      break;\n    case 'pointLight':\n      icon = <GiLightBulb />;\n      break;\n    case 'spotLight':\n      icon = <GiLightProjector />;\n      break;\n    case 'directionalLight':\n      icon = <BiSun />;\n      break;\n    case 'perspectiveCamera':\n    case 'orthographicCamera':\n      icon = <BsCameraVideoFill />;\n  }\n\n  return (\n    <ButtonImpl\n      // @ts-ignore\n      {...props}\n      className={`inline-flex justify-start items-center rounded-md px-4 py-2 font-medium focus:outline-none focus:ring focus:ring-blue-300 ${\n        objectName === selected\n          ? 'bg-green-800 hover:bg-green-900 text-white'\n          : 'text-gray-700 hover:bg-gray-200'\n      }`}\n    >\n      <span className=\"mr-2\">{icon}</span>\n      {objectName}\n    </ButtonImpl>\n  );\n};\n\nconst SceneOutlinePanel: VFC = () => {\n  const [\n    editablesSnapshot,\n    selected,\n    setSelected,\n    createSnapshot,\n  ] = useEditorStore(\n    (state) => [\n      state.editablesSnapshot,\n      state.selected,\n      state.setSelected,\n      state.createSnapshot,\n    ],\n    shallow\n  );\n\n  if (editablesSnapshot === null) {\n    return null;\n  }\n\n  return (\n    <div className=\"flex flex-col overflow-y-auto w-80 h-full p-5 border-r bg-white\">\n      <Heading className=\"mb-5 ml-3 text-3xl\">Outline</Heading>\n      <Group\n        // @ts-ignore\n        className=\"flex flex-col gap-3 flex-1\"\n      >\n        {Object.entries(editablesSnapshot).map(\n          ([name, editable]) =>\n            editable.role === 'active' && (\n              <ObjectButton\n                key={name}\n                objectName={name}\n                editableType={editable.type}\n                selected={selected}\n                onClick={() => {\n                  setSelected(name);\n                }}\n              />\n            )\n        )}\n      </Group>\n      <div className=\"flex-0 mt-3\">\n        <Button\n          className=\"w-full\"\n          onClick={() => {\n            createSnapshot();\n          }}\n        >\n          Sync editor\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default SceneOutlinePanel;\n","import React, { useCallback, useEffect, VFC } from 'react';\nimport { useForm, UseFormMethods } from 'react-hook-form';\nimport { useEditorStore } from '../store';\nimport { Euler, Matrix4, Quaternion, Vector3 } from 'three';\nimport shallow from 'zustand/shallow';\nimport {\n  FormControl,\n  Heading,\n  Input,\n  Legend,\n  VisuallyHidden,\n} from './elements';\nimport { Button } from 'reakit';\nimport { MdRestore } from '@react-icons/all-files/md/MdRestore';\n\ninterface Vector3InputProps {\n  register: UseFormMethods['register'];\n  onBlur?: () => void;\n  label: string;\n  name: string;\n}\n\nconst Vector3Input: VFC<Vector3InputProps> = ({\n  register,\n  onBlur,\n  label,\n  name,\n}) => {\n  return (\n    <fieldset>\n      <Legend>{label}</Legend>\n      <div className=\"flex gap-3\">\n        <FormControl id={`${name}-x`}>\n          <Input name={`${name}X`} ref={register} onBlur={onBlur} />\n        </FormControl>\n        <FormControl id={`${name}-y`}>\n          <Input name={`${name}Y`} ref={register} onBlur={onBlur} />\n        </FormControl>\n        <FormControl id={`${name}-z`}>\n          <Input name={`${name}Z`} ref={register} onBlur={onBlur} />\n        </FormControl>\n      </div>\n    </fieldset>\n  );\n};\n\ntype Inputs = {\n  positionX: string;\n  positionY: string;\n  positionZ: string;\n  rotationX: string;\n  rotationY: string;\n  rotationZ: string;\n  scaleX: string;\n  scaleY: string;\n  scaleZ: string;\n};\n\nconst PropertiesPanel: VFC = () => {\n  const [selected, setEditableTransform] = useEditorStore(\n    (state) => [state.selected, state.setEditableTransform],\n    shallow\n  );\n\n  const getFormValuesFromEditable = useCallback(() => {\n    if (!selected) {\n      return;\n    }\n\n    const position = new Vector3();\n    const rotation = new Quaternion();\n    const scale = new Vector3();\n\n    useEditorStore\n      .getState()\n      .editables[selected].properties.transform.decompose(\n        position,\n        rotation,\n        scale\n      );\n\n    const rotationEuler = new Euler();\n    rotationEuler.setFromQuaternion(rotation);\n\n    return {\n      positionX: position.x.toFixed(2),\n      positionY: position.y.toFixed(2),\n      positionZ: position.z.toFixed(2),\n      rotationX: rotationEuler.x.toFixed(2),\n      rotationY: rotationEuler.y.toFixed(2),\n      rotationZ: rotationEuler.z.toFixed(2),\n      scaleX: scale.x.toFixed(2),\n      scaleY: scale.y.toFixed(2),\n      scaleZ: scale.z.toFixed(2),\n    };\n  }, [selected]);\n\n  const { handleSubmit, register, setValue, reset } = useForm<Inputs>({\n    defaultValues: getFormValuesFromEditable(),\n  });\n\n  useEffect(() => {\n    if (!selected) {\n      return;\n    }\n\n    const formValues = getFormValuesFromEditable();\n    if (formValues) {\n      Object.entries(formValues).forEach(([key, value]) => {\n        // avoids rerenders, unlike reset\n        setValue(key, value);\n      });\n    }\n\n    const unsub = useEditorStore.subscribe(\n      () => {\n        const formValues = getFormValuesFromEditable();\n        if (formValues) {\n          Object.entries(formValues).forEach(([key, value]) => {\n            // avoids rerenders, unlike reset\n            setValue(key, value);\n          });\n        }\n      },\n      (state) => state.editables[selected]\n    );\n\n    return () => unsub();\n  }, [getFormValuesFromEditable, selected, setValue]);\n\n  return selected ? (\n    <div className=\"overflow-y-auto w-80 h-full p-5 border-l bg-white\">\n      <Heading className=\"mb-5 text-3xl\">Properties</Heading>\n      <form\n        onSubmit={handleSubmit((values) => {\n          const position = new Vector3(\n            Number(values.positionX),\n            Number(values.positionY),\n            Number(values.positionZ)\n          );\n          const rotation = new Quaternion().setFromEuler(\n            new Euler(\n              Number(values.rotationX),\n              Number(values.rotationY),\n              Number(values.rotationZ)\n            )\n          );\n          const scale = new Vector3(\n            Number(values.scaleX),\n            Number(values.scaleY),\n            Number(values.scaleZ)\n          );\n          const transform = new Matrix4().compose(position, rotation, scale);\n          setEditableTransform(selected, transform);\n        })}\n      >\n        <div className=\"flex flex-col gap-3\">\n          <div className=\"flex justify-between items-center text-xl font-medium\">\n            <div>Transforms</div>\n            <Button\n              // @ts-ignore\n              className=\"rounded-full focus:outline-none focus:ring transition-transform transform hover:scale-125\"\n              onClick={() => {\n                const editable = useEditorStore.getState().editables[selected];\n                setEditableTransform(\n                  selected,\n                  editable.initialProperties.transform.clone()\n                );\n              }}\n            >\n              <MdRestore />\n            </Button>\n          </div>\n          <Vector3Input\n            register={register}\n            onBlur={() => reset(getFormValuesFromEditable())}\n            label=\"Position\"\n            name=\"position\"\n          />\n          <Vector3Input\n            register={register}\n            onBlur={() => reset(getFormValuesFromEditable())}\n            label=\"Rotation\"\n            name=\"rotation\"\n          />\n          <Vector3Input\n            register={register}\n            onBlur={() => reset(getFormValuesFromEditable())}\n            label=\"Scale\"\n            name=\"scale\"\n          />\n        </div>\n        {/* so that submitting with enter works */}\n        <VisuallyHidden as=\"input\" type=\"submit\" />\n      </form>\n    </div>\n  ) : null;\n};\n\nexport default PropertiesPanel;\n","import React, { VFC } from 'react';\nimport { useEditorStore } from '../store';\nimport shallow from 'zustand/shallow';\nimport { Checkbox, FormControl } from './elements';\n\nconst ViewportShadingSettings: VFC = () => {\n  const [\n    showOverlayIcons,\n    showGrid,\n    showAxes,\n    setShowOverlayIcons,\n    setShowGrid,\n    setShowAxes,\n  ] = useEditorStore(\n    (state) => [\n      state.showOverlayIcons,\n      state.showGrid,\n      state.showAxes,\n      state.setShowOverlayIcons,\n      state.setShowGrid,\n      state.setShowAxes,\n    ],\n    shallow\n  );\n\n  return (\n    <div className=\"flex flex-col gap-3\">\n      <FormControl>\n        <Checkbox\n          // @ts-ignore\n          checked={showOverlayIcons}\n          onChange={() => setShowOverlayIcons(!showOverlayIcons)}\n        >\n          Show overlay icons\n        </Checkbox>\n      </FormControl>\n      <FormControl>\n        <Checkbox\n          // @ts-ignore\n          checked={showGrid}\n          onChange={() => setShowGrid(!showGrid)}\n        >\n          Show grid\n        </Checkbox>\n      </FormControl>\n      <FormControl>\n        <Checkbox\n          // @ts-ignore\n          checked={showAxes}\n          onChange={() => setShowAxes(!showAxes)}\n        >\n          Show axes\n        </Checkbox>\n      </FormControl>\n    </div>\n  );\n};\n\nexport default ViewportShadingSettings;\n","import React, { VFC } from 'react';\nimport TransformControlsModeSelect from './TransformControlsModeSelect';\nimport { useEditorStore } from '../store';\nimport shallow from 'zustand/shallow';\nimport ReferenceWindow from './ReferenceWindow';\nimport { saveAs } from 'file-saver';\nimport { Vector3 } from 'three';\nimport { RiFocus3Line } from '@react-icons/all-files/ri/RiFocus3Line';\nimport { GiPocketBow } from '@react-icons/all-files/gi/GiPocketBow';\nimport { AiFillEye } from '@react-icons/all-files/ai/AiFillEye';\nimport TransformControlsSpaceSelect from './TransformControlsSpaceSelect';\nimport ViewportShadingSelect from './ViewportShadingSelect';\nimport SceneOutlinePanel from './SceneOutlinePanel';\nimport PropertiesPanel from './PropertiesPanel';\nimport { IconButton, Button, SettingsButton } from './elements';\nimport ViewportSettings from './ViewportSettings';\n\nconst UI: VFC = () => {\n  const [\n    transformControlsMode,\n    transformControlsSpace,\n    viewportShading,\n    setTransformControlsMode,\n    setTransformControlsSpace,\n    setViewportShading,\n    setEditorOpen,\n    setEditableTransform,\n  ] = useEditorStore(\n    (state) => [\n      state.transformControlsMode,\n      state.transformControlsSpace,\n      state.viewportShading,\n      state.setTransformControlsMode,\n      state.setTransformControlsSpace,\n      state.setViewportShading,\n      state.setEditorOpen,\n      state.setEditableTransform,\n    ],\n    shallow\n  );\n\n  return (\n    <div className=\"absolute inset-0 z-50 pointer-events-none\">\n      <div className=\"flex h-full\">\n        <div className=\"w-min pointer-events-auto\">\n          <SceneOutlinePanel />\n        </div>\n        <div className=\"relative flex-1 m-5\">\n          <div className=\"flex items-start justify-between\">\n            <div className=\"flex gap-4\">\n              <div className=\"pointer-events-auto\">\n                <TransformControlsModeSelect\n                  value={transformControlsMode}\n                  onChange={(value) => setTransformControlsMode(value)}\n                />\n              </div>\n              <div className=\"pointer-events-auto\">\n                <TransformControlsSpaceSelect\n                  value={transformControlsSpace}\n                  onChange={setTransformControlsSpace}\n                />\n              </div>\n              <div className=\"pointer-events-auto\">\n                <ViewportShadingSelect\n                  value={viewportShading}\n                  onChange={setViewportShading}\n                />\n              </div>\n              <div className=\"pointer-events-auto\">\n                <IconButton\n                  label=\"Focus on selected\"\n                  icon={<RiFocus3Line />}\n                  onClick={() => {\n                    const orbitControls = useEditorStore.getState()\n                      .orbitControlsRef?.current;\n                    const selected = useEditorStore.getState().selected;\n                    let focusObject;\n\n                    if (selected) {\n                      focusObject = useEditorStore.getState()\n                        .editablesSnapshot![selected].proxyObject;\n                    }\n\n                    if (orbitControls && focusObject) {\n                      focusObject.getWorldPosition(\n                        orbitControls.target as Vector3\n                      );\n                    }\n                  }}\n                />\n              </div>\n              <div className=\"pointer-events-auto\">\n                <IconButton\n                  label=\"Align object to view\"\n                  icon={<GiPocketBow />}\n                  onClick={() => {\n                    const camera = useEditorStore.getState().orbitControlsRef\n                      ?.current?.object;\n                    const selected = useEditorStore.getState().selected;\n\n                    let proxyObject;\n\n                    if (selected) {\n                      proxyObject = useEditorStore.getState()\n                        .editablesSnapshot![selected].proxyObject;\n\n                      if (proxyObject && camera) {\n                        const direction = new Vector3();\n                        const position = camera.position.clone();\n\n                        camera.getWorldDirection(direction);\n                        proxyObject.position.set(0, 0, 0);\n                        proxyObject.lookAt(direction);\n\n                        proxyObject.parent!.worldToLocal(position);\n                        proxyObject.position.copy(position);\n\n                        proxyObject.updateMatrix();\n\n                        setEditableTransform(\n                          selected,\n                          proxyObject.matrix.clone()\n                        );\n                      }\n                    }\n                  }}\n                />\n              </div>\n              <div className=\"pointer-events-auto\">\n                <SettingsButton icon={<AiFillEye />} label=\"Viewport settings\">\n                  <ViewportSettings />\n                </SettingsButton>\n              </div>\n            </div>\n            <div className=\"absolute right-0 top-0 -z-10\">\n              <ReferenceWindow height={120} />\n            </div>\n          </div>\n\n          {/* Bottom-left corner*/}\n          <Button\n            className=\"absolute left-0 bottom-0 pointer-events-auto\"\n            onClick={() => setEditorOpen(false)}\n          >\n            Close\n          </Button>\n\n          {/* Bottom-right corner */}\n          <Button\n            className=\"absolute right-0 bottom-0 pointer-events-auto\"\n            onClick={() => {\n              const blob = new Blob(\n                [JSON.stringify(useEditorStore.getState().serialize())],\n                { type: 'text/json;charset=utf-8' }\n              );\n              saveAs(blob, 'editableState.json');\n            }}\n          >\n            Save\n          </Button>\n        </div>\n        <div className=\"w-min pointer-events-auto\">\n          <PropertiesPanel />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UI;\n","import {\n  BoxHelper,\n  CameraHelper,\n  DirectionalLightHelper,\n  Object3D,\n  PointLightHelper,\n  SpotLightHelper,\n} from 'three';\nimport React, {\n  ReactElement,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  VFC,\n} from 'react';\nimport { useHelper, Sphere, Html } from '@react-three/drei';\nimport { EditableType, useEditorStore } from '../store';\nimport shallow from 'zustand/shallow';\nimport { BsFillCollectionFill } from '@react-icons/all-files/bs/BsFillCollectionFill';\nimport { GiLightProjector } from '@react-icons/all-files/gi/GiLightProjector';\nimport { BiSun } from '@react-icons/all-files/bi/BiSun';\nimport { GiCube } from '@react-icons/all-files/gi/GiCube';\nimport { GiLightBulb } from '@react-icons/all-files/gi/GiLightBulb';\nimport { BsCameraVideoFill } from '@react-icons/all-files/bs/BsCameraVideoFill';\nimport { IconType } from '@react-icons/all-files';\n\nexport interface EditableProxyProps {\n  editableName: string;\n  editableType: EditableType;\n  object: Object3D;\n  onChange?: () => void;\n}\n\nconst EditableProxy: VFC<EditableProxyProps> = ({\n  editableName,\n  editableType,\n  object,\n}) => {\n  const [\n    selected,\n    showOverlayIcons,\n    setSelected,\n    setSnapshotProxyObject,\n  ] = useEditorStore(\n    (state) => [\n      state.selected,\n      state.showOverlayIcons,\n      state.setSelected,\n      state.setSnapshotProxyObject,\n    ],\n    shallow\n  );\n\n  useEffect(() => {\n    setSnapshotProxyObject(object, editableName);\n\n    return () => setSnapshotProxyObject(null, editableName);\n  }, [editableName, object, setSnapshotProxyObject]);\n\n  // set up helper\n  let Helper:\n    | typeof SpotLightHelper\n    | typeof DirectionalLightHelper\n    | typeof PointLightHelper\n    | typeof BoxHelper\n    | typeof CameraHelper;\n\n  switch (editableType) {\n    case 'spotLight':\n      Helper = SpotLightHelper;\n      break;\n    case 'directionalLight':\n      Helper = DirectionalLightHelper;\n      break;\n    case 'pointLight':\n      Helper = PointLightHelper;\n      break;\n    case 'perspectiveCamera':\n    case 'orthographicCamera':\n      Helper = CameraHelper;\n      break;\n    case 'group':\n    case 'mesh':\n      Helper = BoxHelper;\n  }\n\n  let helperArgs: [string] | [number, string] | [];\n  const size = 1;\n  const color = 'darkblue';\n\n  switch (editableType) {\n    case 'directionalLight':\n    case 'pointLight':\n      helperArgs = [size, color];\n      break;\n    case 'group':\n    case 'mesh':\n    case 'spotLight':\n      helperArgs = [color];\n      break;\n    case 'perspectiveCamera':\n    case 'orthographicCamera':\n      helperArgs = [];\n  }\n\n  let icon: ReactElement<IconType>;\n  switch (editableType) {\n    case 'group':\n      icon = <BsFillCollectionFill />;\n      break;\n    case 'mesh':\n      icon = <GiCube />;\n      break;\n    case 'pointLight':\n      icon = <GiLightBulb />;\n      break;\n    case 'spotLight':\n      icon = <GiLightProjector />;\n      break;\n    case 'directionalLight':\n      icon = <BiSun />;\n      break;\n    case 'perspectiveCamera':\n    case 'orthographicCamera':\n      icon = <BsCameraVideoFill />;\n  }\n\n  const objectRef = useRef(object);\n\n  useLayoutEffect(() => {\n    objectRef.current = object;\n  }, [object]);\n\n  const dimensionless = [\n    'spotLight',\n    'pointLight',\n    'directionalLight',\n    'perspectiveCamera',\n    'orthographicCamera',\n  ];\n\n  const [hovered, setHovered] = useState(false);\n\n  useHelper(\n    objectRef,\n    selected === editableName || dimensionless.includes(editableType) || hovered\n      ? Helper\n      : null,\n    ...helperArgs\n  );\n\n  return (\n    <>\n      <group\n        onClick={(e) => {\n          if (e.delta < 2) {\n            e.stopPropagation();\n            setSelected(editableName);\n          }\n        }}\n        onPointerOver={(e) => {\n          e.stopPropagation();\n          setHovered(true);\n        }}\n        onPointerOut={(e) => {\n          e.stopPropagation();\n          setHovered(false);\n        }}\n      >\n        <primitive object={object}>\n          {showOverlayIcons && (\n            <Html\n              center\n              className=\"pointer-events-none p-1 rounded bg-white bg-opacity-70 shadow text-gray-700\"\n            >\n              {icon}\n            </Html>\n          )}\n          {dimensionless.includes(editableType) && (\n            <Sphere\n              args={[2, 4, 2]}\n              onClick={(e) => {\n                if (e.delta < 2) {\n                  e.stopPropagation();\n                  setSelected(editableName);\n                }\n              }}\n              userData={{ helper: true }}\n              {...({} as any)}\n            >\n              <meshBasicMaterial visible={false} />\n            </Sphere>\n          )}\n        </primitive>\n      </group>\n    </>\n  );\n};\n\nexport default EditableProxy;\n","import { Object3D, Event } from 'three';\nimport React, { forwardRef, useLayoutEffect, useEffect, useMemo } from 'react';\nimport { ReactThreeFiber, useThree, Overwrite } from 'react-three-fiber';\nimport { TransformControls as TransformControlsImpl } from 'three/examples/jsm/controls/TransformControls';\nimport { OrbitControls } from '@react-three/drei';\n\ntype R3fTransformControls = Overwrite<\n  ReactThreeFiber.Object3DNode<\n    TransformControlsImpl,\n    typeof TransformControlsImpl\n  >,\n  { target?: ReactThreeFiber.Vector3 }\n>;\n\nexport interface TransformControlsProps extends R3fTransformControls {\n  object: Object3D;\n  orbitControlsRef?: React.MutableRefObject<OrbitControls | undefined>;\n  onObjectChange?: (event: Event) => void;\n  onDraggingChange?: (event: Event) => void;\n}\n\nconst TransformControls = forwardRef(\n  (\n    {\n      children,\n      object,\n      orbitControlsRef,\n      onObjectChange,\n      onDraggingChange,\n      ...props\n    }: TransformControlsProps,\n    ref\n  ) => {\n    const { camera, gl, invalidate } = useThree();\n    const controls = useMemo(\n      () => new TransformControlsImpl(camera, gl.domElement),\n      [camera, gl.domElement]\n    );\n\n    useLayoutEffect(() => {\n      controls.attach(object);\n\n      return () => void controls.detach();\n    }, [object, controls]);\n\n    useEffect(() => {\n      controls?.addEventListener?.('change', invalidate);\n      return () => controls?.removeEventListener?.('change', invalidate);\n    }, [controls, invalidate]);\n\n    useEffect(() => {\n      const callback = (event: Event) => {\n        if (orbitControlsRef && orbitControlsRef.current) {\n          orbitControlsRef.current.enabled = !event.value;\n        }\n      };\n\n      if (controls) {\n        controls.addEventListener!('dragging-changed', callback);\n      }\n\n      return () => {\n        controls.removeEventListener!('dragging-changed', callback);\n      };\n    }, [controls, orbitControlsRef]);\n\n    useEffect(() => {\n      if (onObjectChange) {\n        controls.addEventListener('objectChange', onObjectChange);\n      }\n\n      return () => {\n        if (onObjectChange) {\n          controls.removeEventListener('objectChange', onObjectChange);\n        }\n      };\n    }, [onObjectChange, controls]);\n\n    useEffect(() => {\n      if (onDraggingChange) {\n        controls.addEventListener('dragging-changed', onDraggingChange);\n      }\n\n      return () => {\n        if (onDraggingChange) {\n          controls.removeEventListener('dragging-changed', onDraggingChange);\n        }\n      };\n    }, [controls, onDraggingChange]);\n\n    return <primitive dispose={null} object={controls} ref={ref} {...props} />;\n  }\n);\n\nexport default TransformControls;\n","import React, {\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n  VFC,\n} from 'react';\nimport { useEditorStore } from '../store';\nimport { createPortal } from 'react-three-fiber';\nimport EditableProxy from './EditableProxy';\nimport { OrbitControls } from '@react-three/drei';\nimport TransformControls from './TransformControls';\nimport shallow from 'zustand/shallow';\nimport {\n  Material,\n  Matrix4,\n  Mesh,\n  MeshBasicMaterial,\n  MeshPhongMaterial,\n  Object3D,\n} from 'three';\n\nexport interface ProxyManagerProps {\n  orbitControlsRef: React.MutableRefObject<OrbitControls | undefined>;\n}\n\ntype EditableProxy = {\n  portal: ReturnType<typeof createPortal>;\n  object: Object3D;\n};\n\nconst ProxyManager: VFC<ProxyManagerProps> = ({ orbitControlsRef }) => {\n  const isBeingEdited = useRef(false);\n  const [\n    sceneSnapshot,\n    selected,\n    transformControlsMode,\n    transformControlsSpace,\n    viewportShading,\n    setEditableTransform,\n  ] = useEditorStore(\n    (state) => [\n      state.sceneSnapshot,\n      state.selected,\n      state.transformControlsMode,\n      state.transformControlsSpace,\n      state.viewportShading,\n      state.setEditableTransform,\n    ],\n    shallow\n  );\n  const sceneProxy = useMemo(() => sceneSnapshot?.clone(), [sceneSnapshot]);\n  const [editableProxies, setEditableProxies] = useState<{\n    [name: string]: EditableProxy;\n  }>({});\n\n  // set up scene proxies\n  useLayoutEffect(() => {\n    if (!sceneProxy) {\n      return;\n    }\n\n    const editableProxies: { [name: string]: EditableProxy } = {};\n\n    sceneProxy.traverse((object) => {\n      if (object.userData.__editable) {\n        // there are duplicate uniqueNames in the scene, only display one instance in the editor\n        if (editableProxies[object.userData.__editableName]) {\n          object.parent!.remove(object);\n        } else {\n          editableProxies[object.userData.__editableName] = {\n            portal: createPortal(\n              <EditableProxy\n                editableName={object.userData.__editableName}\n                editableType={object.userData.__editableType}\n                object={object}\n              />,\n              object.parent\n            ),\n            object: object,\n          };\n        }\n      }\n    });\n\n    setEditableProxies(editableProxies);\n  }, [orbitControlsRef, sceneProxy]);\n\n  // subscribe to external changes\n  useEffect(() => {\n    if (!selected) {\n      return;\n    }\n\n    const unsub = useEditorStore.subscribe(\n      (transform) => {\n        if (isBeingEdited.current) {\n          return;\n        }\n\n        const object = editableProxies[selected].object;\n\n        (transform as Matrix4).decompose(\n          object.position,\n          object.quaternion,\n          object.scale\n        );\n      },\n      (state) => state.editables[selected].properties.transform\n    );\n\n    return () => void unsub();\n  }, [editableProxies, selected]);\n\n  // set up viewport shading modes\n  const [renderMaterials, setRenderMaterials] = useState<{\n    [id: string]: Material | Material[];\n  }>({});\n\n  useLayoutEffect(() => {\n    if (!sceneProxy) {\n      return;\n    }\n\n    const renderMaterials: {\n      [id: string]: Material | Material[];\n    } = {};\n\n    sceneProxy.traverse((object) => {\n      const mesh = object as Mesh;\n      if (mesh.isMesh && !mesh.userData.helper) {\n        renderMaterials[mesh.id] = mesh.material;\n      }\n    });\n\n    setRenderMaterials(renderMaterials);\n\n    return () => {\n      Object.entries(renderMaterials).forEach(([id, material]) => {\n        (sceneProxy.getObjectById(\n          Number.parseInt(id)\n        ) as Mesh).material = material;\n      });\n    };\n  }, [sceneProxy]);\n\n  useLayoutEffect(() => {\n    if (!sceneProxy) {\n      return;\n    }\n\n    sceneProxy.traverse((object) => {\n      const mesh = object as Mesh;\n      if (mesh.isMesh && !mesh.userData.helper) {\n        let material;\n        switch (viewportShading) {\n          case 'wireframe':\n            mesh.material = new MeshBasicMaterial({\n              wireframe: true,\n              color: 'black',\n            });\n            break;\n          case 'flat':\n            // it is possible that renderMaterials hasn't updated yet\n            if (!renderMaterials[mesh.id]) {\n              return;\n            }\n            material = new MeshBasicMaterial();\n            if (renderMaterials[mesh.id].hasOwnProperty('color')) {\n              material.color = (renderMaterials[mesh.id] as any).color;\n            }\n            if (renderMaterials[mesh.id].hasOwnProperty('map')) {\n              material.map = (renderMaterials[mesh.id] as any).map;\n            }\n            if (renderMaterials[mesh.id].hasOwnProperty('vertexColors')) {\n              material.vertexColors = (renderMaterials[\n                mesh.id\n              ] as any).vertexColors;\n            }\n            mesh.material = material;\n            break;\n          case 'solid':\n            // it is possible that renderMaterials hasn't updated yet\n            if (!renderMaterials[mesh.id]) {\n              return;\n            }\n            material = new MeshPhongMaterial();\n            if (renderMaterials[mesh.id].hasOwnProperty('color')) {\n              material.color = (renderMaterials[mesh.id] as any).color;\n            }\n            if (renderMaterials[mesh.id].hasOwnProperty('map')) {\n              material.map = (renderMaterials[mesh.id] as any).map;\n            }\n            if (renderMaterials[mesh.id].hasOwnProperty('vertexColors')) {\n              material.vertexColors = (renderMaterials[\n                mesh.id\n              ] as any).vertexColors;\n            }\n            mesh.material = material;\n            break;\n          case 'rendered':\n            mesh.material = renderMaterials[mesh.id];\n        }\n      }\n    });\n  }, [viewportShading, renderMaterials, sceneProxy]);\n\n  if (!sceneProxy) {\n    return null;\n  }\n\n  return (\n    <>\n      <primitive object={sceneProxy} />\n      {selected && (\n        <TransformControls\n          mode={transformControlsMode}\n          space={transformControlsSpace}\n          orbitControlsRef={orbitControlsRef}\n          object={editableProxies[selected].object}\n          onObjectChange={() => {\n            setEditableTransform(\n              selected,\n              editableProxies[selected].object.matrix.clone()\n            );\n          }}\n          onDraggingChange={(event) => (isBeingEdited.current = event.value)}\n        />\n      )}\n      {Object.values(editableProxies).map(({ portal }) => portal)}\n    </>\n  );\n};\n\nexport default ProxyManager;\n","import React, {\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  VFC,\n  Suspense,\n} from 'react';\nimport { Canvas, useThree } from 'react-three-fiber';\nimport { useEditorStore } from '../store';\nimport { OrbitControls, Environment } from '@react-three/drei';\nimport shallow from 'zustand/shallow';\nimport root from 'react-shadow';\nimport styles from '../styles.css';\nimport UI from './UI';\nimport ProxyManager from './ProxyManager';\nimport {\n  Button,\n  Heading,\n  Code,\n  PortalManager,\n  Modal,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  IdProvider,\n} from './elements';\n\nconst EditorScene = () => {\n  const orbitControlsRef = useRef<OrbitControls>();\n  const { camera } = useThree();\n\n  const [\n    selectedHdr,\n    useHdrAsBackground,\n    showGrid,\n    showAxes,\n    setOrbitControlsRef,\n  ] = useEditorStore(\n    (state) => [\n      state.selectedHdr,\n      state.useHdrAsBackground,\n      state.showGrid,\n      state.showAxes,\n      state.setOrbitControlsRef,\n    ],\n    shallow\n  );\n\n  useEffect(() => {\n    setOrbitControlsRef(orbitControlsRef);\n  }, [camera, setOrbitControlsRef]);\n\n  return (\n    <>\n      <Suspense fallback={null}>\n        {selectedHdr && (\n          <Environment\n            // @ts-ignore\n            files={selectedHdr}\n            path=\"\"\n            background={useHdrAsBackground}\n          />\n        )}\n      </Suspense>\n      {showGrid && <gridHelper args={[1000, 1000, 0x444444, 0x888888]} />}\n      {showAxes && <axesHelper args={[500]} />}\n      <orbitControlsImpl ref={orbitControlsRef} />\n      <ProxyManager orbitControlsRef={orbitControlsRef} />\n    </>\n  );\n};\n\nconst Editor: VFC = () => {\n  const [\n    sceneSnapshot,\n    editorOpen,\n    initialState,\n    setEditorOpen,\n    setSelected,\n    createSnapshot,\n    isPersistedStateDifferentThanInitial,\n    applyPersistedState,\n  ] = useEditorStore(\n    (state) => [\n      state.sceneSnapshot,\n      state.editorOpen,\n      state.initialState,\n      state.setEditorOpen,\n      state.setSelected,\n      state.createSnapshot,\n      state.isPersistedStateDifferentThanInitial,\n      state.applyPersistedState,\n    ],\n    shallow\n  );\n\n  const [stateMismatch, setStateMismatch] = useState(false);\n\n  useLayoutEffect(() => {\n    if (initialState) {\n      setStateMismatch(isPersistedStateDifferentThanInitial());\n    } else {\n      applyPersistedState();\n    }\n  }, [applyPersistedState, initialState, isPersistedStateDifferentThanInitial]);\n\n  return (\n    <root.div>\n      <div id=\"react-three-editable-editor-root\">\n        <PortalManager>\n          <IdProvider>\n            <div className=\"relative z-50\">\n              <div\n                className={`fixed ${editorOpen ? 'block' : 'hidden'} inset-0`}\n              >\n                {sceneSnapshot ? (\n                  <>\n                    <div className=\"relative z-0 h-full\">\n                      <Canvas\n                        colorManagement\n                        camera={{ position: [20, 20, 20] }}\n                        onCreated={({ gl }) => {\n                          gl.setClearColor('white');\n                        }}\n                        shadowMap\n                        pixelRatio={window.devicePixelRatio}\n                        onPointerMissed={() => setSelected(null)}\n                      >\n                        <EditorScene />\n                      </Canvas>\n                    </div>\n\n                    <UI />\n                  </>\n                ) : (\n                  <div className=\"flex justify-center items-center bg-white h-screen\">\n                    <div className=\"flex flex-col gap-5 items-center \">\n                      <Heading className=\"text-2xl mb-4\">\n                        No canvas connected\n                      </Heading>\n                      <div>\n                        Please use <Code>configure()</Code> and{' '}\n                        <Code>bind()</Code> to connect a canvas to React Three\n                        Editable.\n                      </div>\n                      <Code block>\n                        {`import React from 'react';\nimport { Canvas } from 'react-three-fiber';\nimport { configure, editable as e } from 'react-three-editable';\n\nconst bind = configure({\n  localStorageNamespace: \"MyProject\"\n});\n\nconst MyComponent = () => (\n  <Canvas onCreated={bind()}>\n    <e.mesh uniqueName=\"My First Editable Object\">\n      <sphereBufferGeometry />\n      <meshStandardMaterial color=\"rebeccapurple\" />\n    </e.mesh>\n  </Canvas>\n);`}\n                      </Code>\n                      <div>\n                        For more details, please consult the{' '}\n                        <a\n                          className=\"rounded-md font-medium text-green-600 hover:text-green-500\"\n                          href=\"https://github.com/AndrewPrifer/react-three-editable\"\n                          rel=\"noreferrer\"\n                          target=\"_blank\"\n                        >\n                          documentation\n                        </a>\n                        .\n                      </div>\n                      <Button\n                        className=\"\"\n                        onClick={() => {\n                          setEditorOpen(false);\n                        }}\n                      >\n                        Close\n                      </Button>\n                    </div>\n                  </div>\n                )}\n              </div>\n              {editorOpen || (\n                <Button\n                  className=\"fixed bottom-5 left-5\"\n                  onClick={() => {\n                    if (!sceneSnapshot) {\n                      createSnapshot();\n                    }\n                    setEditorOpen(true);\n                  }}\n                >\n                  Editor\n                </Button>\n              )}\n            </div>\n            <Modal visible={stateMismatch}>\n              <ModalHeader>Saved state found</ModalHeader>\n              <ModalBody>\n                Would you like to use initial state or saved state?\n              </ModalBody>\n              <ModalFooter>\n                <Button\n                  className=\"flex-1\"\n                  onClick={() => {\n                    applyPersistedState();\n                    setStateMismatch(false);\n                  }}\n                >\n                  Saved\n                </Button>\n                <Button\n                  className=\"flex-1\"\n                  onClick={() => {\n                    setStateMismatch(false);\n                  }}\n                >\n                  Initial\n                </Button>\n              </ModalFooter>\n            </Modal>\n            <style type=\"text/css\">{styles}</style>\n          </IdProvider>\n        </PortalManager>\n      </div>\n    </root.div>\n  );\n};\n\nexport default Editor;\n","import React, {\n  ComponentProps,\n  forwardRef,\n  JSXElementConstructor,\n  RefAttributes,\n  useLayoutEffect,\n  useRef,\n} from 'react';\nimport {\n  DirectionalLight,\n  Euler,\n  Group,\n  Matrix4,\n  Mesh,\n  OrthographicCamera,\n  PerspectiveCamera,\n  PointLight,\n  Quaternion,\n  SpotLight,\n  Vector3,\n} from 'three';\nimport { EditableType, useEditorStore } from '../store';\nimport shallow from 'zustand/shallow';\nimport mergeRefs from 'react-merge-refs';\n\ninterface Elements {\n  group: Group;\n  mesh: Mesh;\n  spotLight: SpotLight;\n  directionalLight: DirectionalLight;\n  perspectiveCamera: PerspectiveCamera;\n  orthographicCamera: OrthographicCamera;\n  pointLight: PointLight;\n}\n\nconst editable = <\n  T extends JSXElementConstructor<any> | EditableType,\n  U extends EditableType\n>(\n  Component: T,\n  type: U\n) =>\n  forwardRef(\n    (\n      {\n        uniqueName,\n        position,\n        rotation,\n        scale,\n        ...props\n      }: ComponentProps<T> & {\n        uniqueName: string;\n      } & RefAttributes<Elements[U]>,\n      ref\n    ) => {\n      const objectRef = useRef<Elements[U]>();\n\n      const [addEditable, removeEditable] = useEditorStore(\n        (state) => [state.addEditable, state.removeEditable],\n        shallow\n      );\n\n      const transformDeps: string[] = [];\n\n      ['x', 'y', 'z'].forEach((axis) => {\n        transformDeps.push(\n          props[`position-${axis}`],\n          props[`rotation-${axis}`],\n          props[`scale-${axis}`]\n        );\n      });\n\n      useLayoutEffect(() => {\n        // calculate initial properties before adding the editable\n        const pos: Vector3 = position\n          ? new Vector3(...position)\n          : new Vector3();\n        const rot: Vector3 = rotation\n          ? new Vector3(...rotation)\n          : new Vector3();\n        const scal: Vector3 = scale\n          ? new Vector3(...scale)\n          : new Vector3(1, 1, 1);\n\n        ['x', 'y', 'z'].forEach((axis, index) => {\n          if (props[`position-${axis}`])\n            pos.setComponent(index, props[`position-${axis}`]);\n          if (props[`rotation-${axis}`])\n            rot.setComponent(index, props[`rotation-${axis}`]);\n          if (props[`scale-${axis}`])\n            scal.setComponent(index, props[`scale-${axis}`]);\n        });\n\n        const quaternion = new Quaternion().setFromEuler(\n          new Euler().setFromVector3(rot)\n        );\n\n        addEditable(type, uniqueName, {\n          transform: new Matrix4().compose(pos, quaternion, scal),\n        });\n\n        return () => {\n          removeEditable(uniqueName);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, [\n        addEditable,\n        position,\n        removeEditable,\n        rotation,\n        scale,\n        uniqueName,\n\n        // nasty\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        ...transformDeps,\n      ]);\n\n      useLayoutEffect(() => {\n        const object = objectRef.current!;\n        // source of truth is .position, .quaternion and .scale, not the matrix, so we have to do this instead of setting the matrix\n        useEditorStore\n          .getState()\n          .editables[uniqueName].properties.transform.decompose(\n            object.position,\n            object.quaternion,\n            object.scale\n          );\n\n        const unsub = useEditorStore.subscribe(\n          (transform: Matrix4 | null) => {\n            if (transform) {\n              useEditorStore\n                .getState()\n                .editables[uniqueName].properties.transform.decompose(\n                  object.position,\n                  object.quaternion,\n                  object.scale\n                );\n            }\n          },\n          (state) => state.editables[uniqueName].properties.transform\n        );\n\n        return () => {\n          unsub();\n        };\n      }, [uniqueName]);\n\n      return (\n        // @ts-ignore\n        <Component\n          ref={mergeRefs([objectRef, ref])}\n          {...props}\n          userData={{\n            __editable: true,\n            __editableName: uniqueName,\n            __editableType: type,\n          }}\n        />\n      );\n    }\n  );\n\nconst createEditable = <T extends EditableType>(type: T) =>\n  editable(type, type);\n\neditable.group = createEditable('group');\neditable.mesh = createEditable('mesh');\neditable.spotLight = createEditable('spotLight');\neditable.directionalLight = createEditable('directionalLight');\neditable.pointLight = createEditable('pointLight');\neditable.perspectiveCamera = createEditable('perspectiveCamera');\neditable.orthographicCamera = createEditable('orthographicCamera');\n\nexport default editable;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Editor from './components/Editor';\nexport { default as editable } from './components/editable';\nexport { EditableState, configure, BindFunction } from './store';\n\nif (process.env.NODE_ENV === 'development') {\n  const editorRoot = document.createElement('div');\n  document.body.appendChild(editorRoot);\n\n  render(<Editor />, editorRoot);\n}\n"],"names":["config","set","get","setTimeout","existingHandler","DefaultLoadingManager","onProgress","url","loaded","total","match","state","newPaths","Set","hdrPaths","add","Array","from","scene","gl","allowImplicitInstancing","orbitControlsRef","editables","canvasName","initialState","selected","transformControlsMode","transformControlsSpace","viewportShading","editorOpen","sceneSnapshot","editablesSnapshot","selectedHdr","showOverlayIcons","useHdrAsBackground","showGrid","showAxes","init","newEditables","Object","fromEntries","entries","map","name","editable","originalEditable","type","role","properties","transform","Matrix4","fromArray","initialProperties","addEditable","uniqueName","process","console","error","Error","setOrbitControlsRef","camera","removeEditable","removed","rest","setEditableTransform","setSelected","setSelectedHdr","hdr","setTransformControlsMode","mode","setTransformControlsSpace","setViewportShading","setShowOverlayIcons","show","setUseHdrAsBackground","use","setShowGrid","setShowAxes","setEditorOpen","open","createSnapshot","clone","setSnapshotProxyObject","proxyObject","serialize","toArray","isPersistedStateDifferentThanInitial","initialPersistedState","deepEqual","canvases","applyPersistedState","useEditorStore","create","initPersistence","key","unsub","rawPersistedState","localStorage","getItem","JSON","parse","e","subscribe","getState","setItem","stringify","configure","localStorageNamespace","enablePersistence","persistence","undefined","Button","forwardRef","props","ref","React","ButtonImpl","className","Heading","Code","children","block","Highlight","defaultProps","theme","code","language","style","tokens","getLineProps","getTokenProps","line","i","token","Modal","dialog","useDialogState","DialogBackdrop","Dialog","ModalHeader","ModalBody","ModalFooter","PortalManager","wrapperRef","useRef","useState","forceUpdate","useLayoutEffect","PortalContext","Provider","value","current","OptionButton","option","label","icon","onClick","tooltip","useTooltipState","TooltipReference","as","Tooltip","Settings","popover","usePopoverState","tabIndex","PopoverDisclosure","FiChevronDown","Popover","hideOnClickOutside","CompactModeSelect","onChange","options","settingsPanel","Group","TooltipImpl","IconButton","FormControlContext","createContext","FormControl","useId","id","useFormControlContext","useContext","Input","InputImpl","PopoverImpl","visible","SettingsButton","Checkbox","CheckboxImpl","htmlFor","TransformControlsModeSelect","GiMove","GiClockwiseRotation","GiResize","ReferenceWindow","height","canvasRef","shallow","useMeasure","bounds","domElement","useEffect","animationHandle","draw","requestAnimationFrame","width","ctx","getContext","imageSmoothingQuality","fillStyle","fillRect","drawImage","cancelAnimationFrame","TransformControlsSpaceSelect","BiGlobe","BiCube","EnvironmentPreview","Clickable","Canvas","Suspense","fallback","OrbitControls","enableZoom","enablePan","Environment","files","path","background","TorusKnot","metalness","roughness","IoIosClose","size","ViewportShadingSettings","hdrPath","checked","ViewportShadingSelect","GiCube","FaCube","GiIceCube","ObjectButton","objectName","editableType","BsFillCollectionFill","GiLightBulb","GiLightProjector","BiSun","BsCameraVideoFill","SceneOutlinePanel","Vector3Input","register","onBlur","Legend","PropertiesPanel","getFormValuesFromEditable","useCallback","position","Vector3","rotation","Quaternion","scale","decompose","rotationEuler","Euler","setFromQuaternion","positionX","x","toFixed","positionY","y","positionZ","z","rotationX","rotationY","rotationZ","scaleX","scaleY","scaleZ","useForm","defaultValues","handleSubmit","setValue","reset","formValues","forEach","onSubmit","values","Number","setFromEuler","compose","MdRestore","VisuallyHidden","UI","RiFocus3Line","orbitControls","focusObject","getWorldPosition","target","GiPocketBow","object","direction","getWorldDirection","lookAt","parent","worldToLocal","copy","updateMatrix","matrix","AiFillEye","ViewportSettings","blob","Blob","saveAs","EditableProxy","editableName","Helper","SpotLightHelper","DirectionalLightHelper","PointLightHelper","CameraHelper","BoxHelper","helperArgs","color","objectRef","dimensionless","hovered","setHovered","useHelper","includes","delta","stopPropagation","onPointerOver","onPointerOut","Html","center","Sphere","args","userData","helper","TransformControls","onObjectChange","onDraggingChange","useThree","invalidate","controls","useMemo","TransformControlsImpl","attach","detach","addEventListener","removeEventListener","callback","event","enabled","dispose","ProxyManager","isBeingEdited","sceneProxy","editableProxies","setEditableProxies","traverse","__editable","__editableName","remove","portal","createPortal","__editableType","quaternion","renderMaterials","setRenderMaterials","mesh","isMesh","material","getObjectById","parseInt","MeshBasicMaterial","wireframe","hasOwnProperty","vertexColors","MeshPhongMaterial","space","EditorScene","Editor","stateMismatch","setStateMismatch","root","div","IdProvider","colorManagement","onCreated","setClearColor","shadowMap","pixelRatio","window","devicePixelRatio","onPointerMissed","href","rel","styles","Component","transformDeps","axis","push","pos","rot","scal","index","setComponent","setFromVector3","mergeRefs","createEditable","group","spotLight","directionalLight","pointLight","perspectiveCamera","orthographicCamera","editorRoot","document","createElement","body","appendChild","render"],"mappings":"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"}